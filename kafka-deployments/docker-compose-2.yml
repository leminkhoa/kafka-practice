version: '2'
services:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker-0
      - broker-1
      - broker-2
      - schema-registry

    environment:
      KAFKA_CLUSTERS_0_NAME: Cluster imGSURrBTNW23VT28OuLJg
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-0:29092,broker-1:29092,broker-2:29092
      KAFKA_CLUSTERS_0_JMXPORT: 9103,9104,9105
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
  
  
  controller:
    image: confluentinc/cp-kafka:7.4.0
    hostname: controller
    container_name: controller
    ports:
      - "9092:9092"
      - "9102:9102"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9102
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9092'
      KAFKA_LISTENERS: 'CONTROLLER://controller:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-controller-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'imGSURrBTNW23VT28OuLJg'
  
  
  broker-0:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker-0
    container_name: broker-0
    depends_on:
      - controller
    ports:
      - "9093:9093"
      - "9103:9103"
    environment:
      KAFKA_NODE_ID: 2
      BROKER_ID: 0
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-0:29092,PLAINTEXT_HOST://localhost:9093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9103
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-0:29092,PLAINTEXT_HOST://0.0.0.0:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'imGSURrBTNW23VT28OuLJg'


  broker-1:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - controller
    ports:
      - "9094:9094"
      - "9104:9104"
    environment:
      KAFKA_NODE_ID: 3
      BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://localhost:9094'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9104
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://0.0.0.0:9094'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'imGSURrBTNW23VT28OuLJg'

  broker-2:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - controller
    ports:
      - "9095:9095"
      - "9105:9105"
    environment:
      KAFKA_NODE_ID: 4
      BROKER_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:29092,PLAINTEXT_HOST://localhost:9095'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9105
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-2:29092,PLAINTEXT_HOST://0.0.0.0:9095'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid" 
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'imGSURrBTNW23VT28OuLJg'

  schema-registry:
      image: confluentinc/cp-schema-registry:7.4.0
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - broker-0
        - broker-1
        - broker-2
        - controller
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-0:29092,broker-1:29092,broker-2:29092'
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  # rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.4.0
  #   depends_on:
  #     - broker
  #     - controller
  #     - schema-registry
  #   ports:
  #     - 8082:8082
  #   hostname: rest-proxy
  #   container_name: rest-proxy
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'


  # kafka-init-topics:
  #   image: confluentinc/cp-kafka:7.4.0
  #   volumes:
  #      - ./message.json:/data/message.json
  #   depends_on:
  #     - kafka-kraft-0
  #   command: "bash -c 'echo Waiting for Kafka to be ready... && \
  #              cub kafka-ready -b kafka-kraft-0:29092 1 30 && \
  #              kafka-topics --create --topic second.users --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka-kraft-0:29092 && \
  #              kafka-topics --create --topic second.messages --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka-kraft-0:29092 && \
  #              kafka-topics --create --topic first.messages --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka-kraft-0:29092 && \
  #              kafka-console-producer --bootstrap-server kafka-kraft-0:29092 --topic second.users < /data/message.json'"
